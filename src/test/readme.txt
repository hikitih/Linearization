//=====================================================
Самые важные файлы из этой папки.
//=====================================================
BigGraphFactory -- запускает генерацию большого количества gfa файлов графов, полученных из GraphFactory. Все графы с путями, найденными при генерации SNP и коротких инсерций. Пути длинов не более 1.2 длины графа.

CompareSortings -- запускаем в папке с gfa и сортировками (.gfa.vgsort.txt для vg, .gfa.fsort.txt для Eades, .gfa.sort.txt для Haussler). Выдает файл (tsv), где для каждой gfa будет строка с метриками по всем сортировкам + Eades реализации на Java под кодовым именем Really good sorting

AnalyzeThreeSorts -- берет txt файл, выдаваемый CompareSortings и считает мин, макс, среднее, медиану для всех графов с одинаковыми параметрами. В результате дает csv с медианами feedback arcs и average cut width по каждой сортировке. Одна строка -- один набор параметров (обычно всего 5-20 строк).





























//=====================================================
Здесь описание старых тестов, оставшихся со времен начала разработки
//=====================================================
Много тестов для отработки алгоритмов и работы функций.
Test<число>_<число> -- создаются графы с <число> вершин и <число> ребер (из бумажных примеров) и на них тестируется сортировка, эволюция и т.д.
Test1000_999 -- тестируем макс размер графа. Работает до 18М вершин. Сам граф -- простая цепочка
Text25000_... -- тестируем работу findMaxVertex при большом числе циклов

Test20_29 хорошо показывает разницу между cutwidth и reversing edges:
В графе в лучшем случае 4 reversing edges при cutwidth 100 (average 5)
При этом минимальный cutwidth 70, но в такой перестановке соотношение ребер 16/13

TestDegradation показывает проблемы эволюционного алгоритма (по карйней мере в текущем виде):
он не может улучшить 17 16 15 14 13 18 19 12 11 ... 0 потому что почти любые 1-3 перестановки ухудшают ситуацию (тем более было бы верно про соседние)

TestRightOrder and TestWrongOrder -- небольшие тесты для тестирования разных режимов процедуры сортировки

TestGFA -- загружаем bcra1.gfa и sort_bcra1.gfa и сравниваем результаты сортировки с результатами из второго файла

